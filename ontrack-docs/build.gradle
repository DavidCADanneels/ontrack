buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    }
}

plugins {
    id 'com.github.jruby-gradle.base' version '1.2.1'
}

apply plugin: 'groovy'
apply plugin: 'org.asciidoctor.convert'

asciidoctorj {
    version = '1.5.4'
}

dependencies {
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    gems 'rubygems:asciidoctor-diagram:1.4.0'
    compile project(':ontrack-dsl')
    compile project(':ontrack-json')
    compile libraries.commons_io
}

task prepareImages(type: Copy) {
    from 'src/docs/asciidoc'
    include '*.png'
    into 'build/asciidoc/html5'
}

task generateDoc(type: JavaExec) {
    dependsOn 'classes'
    dependsOn ':ontrack-dsl:classes'
    main = 'net.nemerosa.ontrack.docs.DSLDocGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args = ['build']

    inputs.dir project(':ontrack-dsl').file('src/main')
    outputs.file 'build/dsl-generated.json'
    outputs.file 'build/dsl-generated.adoc'
}

task prepareGeneratedDoc(type: Copy) {
    dependsOn 'generateDoc'
    from 'build'
    include 'dsl-generated.adoc'
    into 'src/docs/asciidoc'
}

asciidoctor {
    dependsOn jrubyPrepare
    dependsOn prepareImages
    dependsOn prepareGeneratedDoc
    requires = ['asciidoctor-diagram']
    gemPath = jrubyPrepare.outputDir
    logDocuments = true
    sources {
        include 'index.adoc'
    }
    backends = [
            'html5',
            'pdf',
    ]
    attributes = [
            'ontrack-version': project.versioning.info.display,
            'toc'            : 'left',
    ]
}

build.dependsOn asciidoctor
