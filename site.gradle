/**
 * Site generation
 *
 * Must be called AFTER the current version has been promoted in Ontrack to the RELEASE promotion level.
 *
 * This means having a Site job in the pipeline, after the Publish one, calling the `site` task.
 */

import net.nemerosa.ontrack.gradle.OntrackLastReleases

task siteOntrackLast2Releases(type: OntrackLastReleases) {
    releaseCount = 2
    releasePattern = /2\.[\d]+\..*/
}

task siteOntrackLast3Releases(type: OntrackLastReleases) {
    releaseCount = 6
    releasePattern = /3\.[\d]+\..*/
}

task sitePagesDocJs {
    dependsOn 'siteOntrackLast2Releases'
    dependsOn 'siteOntrackLast3Releases'
    outputs.file project.file('build/site/page/doc.js')
    doLast {
        project.file('build/site/page').mkdirs()
        project.file('build/site/page/doc.js').text =
                "var releases = [${(siteOntrackLast3Releases.releases + siteOntrackLast2Releases.releases).collect { "'${it.name}'" }.join(',')}];"
    }
}

task sitePagesCopyHtml(type: Copy) {
    from 'publication/html5'
    into "build/site/release/doc/"
}

task sitePagesCopyPdf(type: Copy) {
    from 'publication/pdf'
    into "build/site/release/"
}

task sitePagesCopyJavadoc(type: Copy) {
    from zipTree('publication/ontrack-javadoc.zip')
    into "build/site/release/javadoc/"
}

task sitePrepare {
    dependsOn 'sitePagesDocJs'
    dependsOn 'sitePagesCopyHtml'
    dependsOn 'sitePagesCopyPdf'
    dependsOn 'sitePagesCopyJavadoc'
}
