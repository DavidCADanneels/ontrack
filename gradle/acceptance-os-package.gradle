/**
 * Acceptance tests for the OS packages
 */


import net.nemerosa.ontrack.gradle.*

/**
 * Debian tests
 */

task debDockerBuild(type: DockerBuild) {
    dir = file('gradle/os-package/docker/debian')
    tag = 'nemerosa/ontrack-debian'
}

task debDockerRun(type: DockerStart, dependsOn: debDockerBuild) {
    image = 'nemerosa/ontrack-debian'
    tty = true
    command = '/bin/cat'
    ports = [443: 0]
}

String getDebianSourcePath() {
    if (project.hasProperty('ontrack.debian')) {
        return project.properties['ontrack.debian']
    } else {
        return 'build/distributions'
    }
}

task debDockerUpload(type: DockerCopy, dependsOn: debDockerRun) {
    doFirst {
        def src = getDebianSourcePath()
        println "[${name}] Copying Debian package from ${src}"
        project.mkdir 'build/os-package/debian/'
        project.copy {
            from src
            include '*.deb'
            into 'build/os-package/debian/'
            rename '.*', 'ontrack.deb'
        }
    }
    startTask = 'debDockerRun'
    copies = [
            'build/os-package/debian/ontrack.deb': '/root/ontrack.deb',
    ]
}

task debDockerInstall(type: DockerExec, dependsOn: debDockerUpload) {
    startTask = 'debDockerRun'
    commands = [
            setup  : ['mkdir', '-p', '/usr/lib/ontrack/config'],
            dpkg   : ['dpkg', '-i', '/root/ontrack.deb'],
            install: ['update-rc.d', 'ontrack', 'defaults'],
    ]
}

task debDockerConfig(type: DockerCopy, dependsOn: debDockerInstall) {
    doFirst {
        def src = getDebianSourcePath()
        println "[${name}] Copying Debian package from ${src}"
        project.mkdir 'build/os-package/debian/'
        project.copy {
            from src
            include '*.deb'
            into 'build/os-package/debian/'
            rename '.*', 'ontrack.deb'
        }
    }
    startTask = 'debDockerRun'
    copies = [
            'gradle/env/ci/application.yml': '/usr/lib/ontrack/config/application.yml',
            'gradle/env/ci/keystore.p12'   : '/usr/lib/ontrack/config/keystore.p12',
    ]
}

task debDockerStart(type: DockerExec, dependsOn: debDockerConfig) {
    startTask = 'debDockerRun'
    commands = [
            start: ['/etc/init.d/ontrack', 'start']
    ]
}

task debDockerStop(type: DockerStop) {
    startTask = 'debDockerRun'
}

task debAcceptanceTest(/*type: RemoteAcceptanceTest*/) {
//    acceptanceUrl = { "https://${project.properties.acceptanceHost}:${debDockerStart.port}" }
//    disableSsl = true
    dependsOn debDockerStart
    finalizedBy debDockerStop
}

/**
 * TODO RPM tests
 */

task rpmAcceptanceTest

/**
 * OS packages tests
 */

task osPackageAcceptanceTest {
    dependsOn debAcceptanceTest
    dependsOn rpmAcceptanceTest
}