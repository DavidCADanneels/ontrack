/**
 * Acceptance tests for the OS packages
 */
import net.nemerosa.ontrack.gradle.DockerBuild
import net.nemerosa.ontrack.gradle.DockerExec
import net.nemerosa.ontrack.gradle.DockerStart
import net.nemerosa.ontrack.gradle.DockerStop
import net.nemerosa.ontrack.gradle.RemoteAcceptanceTest

/**
 * Debian tests
 */

task debDockerPrepare(type: Copy) {
    copy {
        from project.properties.acceptanceDebianDistributionDir
        include '*.deb'
        into 'gradle/os-package/docker/debian/'
        rename '.*', 'ontrack.deb'
    }
}

task debDockerBuild(type: DockerBuild, dependsOn: debDockerPrepare) {
    dir = file('gradle/os-package/docker/debian')
    tag = 'nemerosa/ontrack-debian'
}

task debDockerRun(type: DockerStart, dependsOn: debDockerBuild) {
    image = 'nemerosa/ontrack-debian'
    tty = true
    command = '/bin/cat'
    ports = [8080: 0]
}

task debDockerStart(type: DockerExec, dependsOn: debDockerRun) {
    startTask = 'debDockerRun'
    commands = [
            start: ['service', 'ontrack', 'start'],
    ]
}

task debDockerStop(type: DockerStop) {
    startTask = 'debDockerRun'
}

task debAcceptanceTest(type: RemoteAcceptanceTest) {
    acceptanceUrl = { "http://${project.properties.acceptanceHost}:${debDockerRun.getActualPort(8080)}" }
    acceptanceContext = 'smoke' // Only basic test
    disableSsl = true
    dependsOn debDockerStart
    finalizedBy debDockerStop
}

/**
 * RPM tests
 */

['7', '6'].each { centOsVersion ->

    tasks.create("rpmDockerPrepare${centOsVersion}", Copy) {
        copy {
            from project.properties.acceptanceRpmDistributionDir
            include '*.rpm'
            into "gradle/os-package/docker/centos/${centOsVersion}"
            rename '.*', 'ontrack.rpm'
        }
    }

    tasks.create("rpmDockerBuild${centOsVersion}", DockerBuild) {
        dependsOn "rpmDockerPrepare${centOsVersion}"
        dir = file("gradle/os-package/docker/centos/${centOsVersion}")
        tag = "nemerosa/ontrack-centos:${centOsVersion}"
    }

    tasks.create("rpmDockerRun${centOsVersion}", DockerStart) {
        dependsOn "rpmDockerBuild${centOsVersion}"
        image = "nemerosa/ontrack-centos:${centOsVersion}"
        tty = true
        command = '/bin/cat'
        ports = [8080: 0]
    }

    tasks.create("rpmDockerStart${centOsVersion}", DockerExec) {
        dependsOn "rpmDockerRun${centOsVersion}"
        startTask = "rpmDockerRun${centOsVersion}"
        commands = [
                start: ['/etc/init.d/ontrack', 'start'],
        ]
    }

    tasks.create("rpmDockerStop${centOsVersion}", DockerStop) {
        startTask = "rpmDockerRun${centOsVersion}"
    }

    tasks.create("rpmAcceptanceTest${centOsVersion}", RemoteAcceptanceTest) {
        acceptanceUrl = {
            DockerStart run = project.tasks.getByName("rpmDockerRun${centOsVersion}") as DockerStart
            return "http://${project.properties.acceptanceHost}:${run.getActualPort(8080)}"
        }
        acceptanceContext = 'smoke' // Only basic test
        disableSsl = true
        dependsOn "rpmDockerStart${centOsVersion}"
        finalizedBy "rpmDockerStop${centOsVersion}"
    }

}
