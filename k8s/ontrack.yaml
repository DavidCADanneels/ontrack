---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ontrack-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  # storageClassName: do-block-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ontrack-pg-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  # storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: ontrack-pg-service
  labels:
    app: "ontrack"
    component: "postgres"
spec:
  ports:
    - port: 5432
  selector:
    app: "ontrack"
    component: "postgres"
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontrack-pg-deployment
  labels:
    app: "ontrack"
    component: "postgres"
spec:
  selector:
    matchLabels:
      app: "ontrack"
      component: "postgres"
  strategy:
      type: Recreate
  template:
    metadata:
      labels:
        app: "ontrack"
        component: "postgres"
    spec:
      volumes:
        - name: ontrack-pg-storage
          persistentVolumeClaim:
            claimName: ontrack-pg-pvc
      containers:
        - name: postgres
          image: "postgres:10.5"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: ontrack-pg-storage
              subPath: db
          env:
            - name: POSTGRES_DB
              value: ontrack
            - name: POSTGRES_USER
              value: ontrack
            - name: POSTGRES_PASSWORD
              value: ontrack
---
apiVersion: v1
kind: Service
metadata:
  name: ontrack-web-service
  labels:
    app: "ontrack"
    component: "web"
spec:
  selector:
    app: "ontrack"
    component: "web"
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http

#          ports:
#            - containerPort: 9082
#              name: tcp
#              protocol: TCP
#            - containerPort: 8082
#              name: console
#              protocol: TCP
#---
#apiVersion: "v1"
#kind: "Service"
#metadata:
#  name: "ontrack-h2-deployment-service"
#  labels:
#    app: "h2"
#spec:
#  ports:
#  - protocol: "TCP"
#    port: 9082
#    targetPort: 9082
#  selector:
#    app: "h2"
#  clusterIP: None
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: ontrack-v2-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 2Gi
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: ontrack-v2-deployment
#  labels:
#    app: "ontrack"
#    major: "2"
#spec:
#  selector:
#    matchLabels:
#      app: "ontrack"
#      major: "2"
#  strategy:
#      type: Recreate
#  template:
#    metadata:
#      labels:
#        app: "ontrack"
#        major: "2"
#    spec:
#      volumes:
#        - name: ontrack-v2-storage
#          persistentVolumeClaim:
#            claimName: ontrack-v2-pvc
#      containers:
#        - name: ontrack
#          image: "nemerosa/ontrack:2.34.8"
#          env:
#            - name: ONTRACK_DB_URL
#              value: "jdbc:h2:tcp://ontrack-h2-deployment-service:9082/ontrack;MODE=MYSQL"
#          volumeMounts:
#            - mountPath: /var/ontrack/data
#              name: ontrack-v2-storage
#          ports:
#            - containerPort: 8080
#              name: http
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              port: http
#              path: /info
#          readinessProbe:
#            httpGet:
#              port: http
#              path: /info
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: ontrack-v2-service
#  labels:
#    app: "ontrack"
#    major: "2"
#spec:
#  type: LoadBalancer
#  ports:
#    - port: 8080
#      targetPort: http
#      protocol: TCP
#      name: http
#  selector:
#    app: "ontrack"
#    major: "2"
