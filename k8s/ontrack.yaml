---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ontrack-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ontrack-pg-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: ontrack-pg-service
  labels:
    app: "ontrack"
    component: "postgres"
spec:
  ports:
    - port: 5432
  selector:
    app: "ontrack"
    component: "postgres"
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontrack-pg-deployment
  labels:
    app: "ontrack"
    component: "postgres"
spec:
  selector:
    matchLabels:
      app: "ontrack"
      component: "postgres"
  strategy:
      type: Recreate
  template:
    metadata:
      labels:
        app: "ontrack"
        component: "postgres"
    spec:
      volumes:
        - name: ontrack-pg-storage
          persistentVolumeClaim:
            claimName: ontrack-pg-pvc
      containers:
        - name: postgres
          image: "postgres:10.5"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: ontrack-pg-storage
              subPath: db
          env:
            - name: POSTGRES_DB
              value: ontrack
            - name: POSTGRES_USER
              value: ontrack
            - name: POSTGRES_PASSWORD
              value: ontrack
---
apiVersion: v1
kind: Service
metadata:
  name: ontrack-web-service
  labels:
    app: "ontrack"
    component: "web"
spec:
  selector:
    app: "ontrack"
    component: "web"
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontrack-web-deployment
  labels:
    app: "ontrack"
    component: "web"
spec:
  selector:
    matchLabels:
      app: "ontrack"
      component: "web"
  strategy:
      type: Recreate
  template:
    metadata:
      labels:
        app: "ontrack"
        component: "web"
    spec:
      volumes:
        - name: ontrack-data-storage
          persistentVolumeClaim:
            claimName: ontrack-data-pvc
      containers:
        - name: ontrack
          image: "nemerosa/ontrack:3.37.7"
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://ontrack-pg-service:5432/ontrack"
          volumeMounts:
            - mountPath: /var/ontrack/data
              name: ontrack-data-storage
          ports:
            - containerPort: 8080
              name: ontrack-port
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /manage/health
              port: ontrack-port
            initialDelaySeconds: 120
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: ontrack-port
            initialDelaySeconds: 130
            timeoutSeconds: 10
            failureThreshold: 10
