dependencies {
    testCompile project(':ontrack-client')
}

// Disable unit tests (none in this project)
test {
    enabled = false
}

// Acceptance tests
task acceptanceTest(type: Test) {
}

// Local acceptance tests
task localAcceptanceTest << {
    // Running the acceptance tests
    project.tasks.acceptanceTest.execute()
}

task localAcceptanceTestStart << {

    // Properties
    def ontrackPort = project.hasProperty('ontrackPort') ? ontrackPort : 9999

    // Getting the version on the UI to get
    def ontrackVersion = project.hasProperty('ontrackVersion') ? ontrackVersion : project.version
    println "Using Ontrack version ${ontrackVersion}"

    // Copying the UI JAR locally
    println "Copying the UI JAR to ${project.buildDir}/local-acceptance"
    copy {
        from project(':ontrack-ui').tasks.jar
        into "${project.buildDir}/local-acceptance"
    }

    ant.echo 'Starting the UI for the acceptance tests...'
    ant.property(name: 'app.file', value: "${project.buildDir}/local-acceptance/${project(':ontrack-ui').tasks.jar.archiveName}")
    ant.property(name: 'app.dir', value: "${project.buildDir}/local-acceptance/run")
    ant.property(name: 'app.log', value: "${project.buildDir}/local-acceptance/run/log/")
    ant.mkdir(dir: '${app.dir}')
    ant.echo 'Starting application in ${app.dir}'
    ant.echo 'Starting application defined by ${app.file}'
    ant.echo "Starting application on port ${ontrackPort}"
    ant.echo 'Log files available at ${app.log}'

    ant.java(
            jar: '${app.file}',
            fork: true,
            spawn: true,
            dir: '${app.dir}'
    ) {
        arg(value: "--server.port=${ontrackPort}")
        arg(value: '--logging.path=${app.log}')
        arg(value: '--spring.profiles.active=acceptance')
    }

    /**
     <java
     jar="${app.file}"
     fork="true"
     spawn="true"
     dir="${app.dir}">
     <jvmarg line="${sonar.jacoco.args}"/>
     <arg value="--server.port=${ontrack.port}"/>
     <arg value="--logging.path=${app.log}"/>
     <arg value="--spring.profiles.active=acceptance"/>
     </java>
     <!-- Waits for the JVM to start -->
     <echo message="Waiting ${ontrack.wait} seconds (max) for the JVM to start"/>
     <waitfor maxwait="${ontrack.wait}" maxwaitunit="second" checkevery="500">
     <http url="${ontrack.url}/info"/>
     </waitfor>
     <echo message="JVM is started"/>
     */
}

task localAcceptanceTestEnd << {
    println "END"
}

// Ordering
project.tasks.localAcceptanceTestStart.dependsOn ':ontrack-ui:build'
project.tasks.localAcceptanceTest.dependsOn 'localAcceptanceTestStart'
project.tasks.localAcceptanceTest.finalizedBy 'localAcceptanceTestEnd'
