buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.liferay:gradle-plugins-node:4.3.0'
    }
}

// Plug-ins

apply plugin: 'base'
apply plugin: 'com.liferay.node'

// Imports

import com.liferay.gradle.plugins.node.tasks.ExecuteNodeScriptTask

// Node environment

node {
    global = true
    nodeVersion = '8.10.0'
    npmVersion = '5.7.1'
    download = true
}

// NPM cache

npmInstall {
    nodeModulesCacheDir = "${rootDir}/.gradle/node_modules_cache"
    inputs.files file('package.json')
    outputs.dir file('node_modules')
}

// Installing the Bower packages

task bowerInstall(type: ExecuteNodeScriptTask, dependsOn: npmInstall) {
    scriptFile = file('node_modules/bower/bin/bower')
    def bowerArgs = ["--config.storage.cache=${rootDir}/.gradle/bower/cache",
                     "--config.storage.packages=${rootDir}/.gradle/bower/packages",
                     "--config.storage.registry=${rootDir}/.gradle/bower/registry",
                     'install']
    if (project.properties.bowerOptions) {
        bowerArgs.add(project.properties.bowerOptions as String)
    }
    args = bowerArgs
    inputs.files file('bower.json')
    outputs.dir file('vendor')
}

// Cleanup

clean.delete << file('build/web')

// Web packaging
//
//task dev(type: NodeTask, dependsOn: bowerInstall) {
//    script = file('node_modules/gulp/bin/gulp')
//    args = ['dev']
//}

task prod(type: ExecuteNodeScriptTask, dependsOn: bowerInstall) {
    scriptFile = file('node_modules/gulp/bin/gulp')
    args = ['default', '--version', versioning.info.display]
    inputs.dir file('src')
    inputs.file file('bower.json')
    inputs.file file('gulpfile.js')
    inputs.file file('package.json')
    ext.outputDir = file('build/web/prod')
    outputs.dir outputDir
}

build.dependsOn prod

//task watch(type: NodeTask, dependsOn: dev) {
//    script = file('node_modules/gulp/bin/gulp')
//    args = ['watch']
//}
