apply plugin: 'base'

task npmInstall(type: Exec) {
    commandLine 'npm', 'install'
}

task bowerInstall(type: Exec) {
    inputs.file "${projectDir}/bower.json"
    outputs.dir "${projectDir}/vendor"
    commandLine 'bower', 'install', '--force-latest'
}

task setup(dependsOn: ['npmInstall', 'bowerInstall'])

task gruntClean(type: Exec, dependsOn: ['setup']) {
    commandLine 'grunt', 'clean'
}

task versionClean(type: Exec) {
    commandLine 'git', 'checkout', '--', 'package.json'
}

task clean(dependsOn: ['gruntClean', 'versionClean']) {
    doLast {
        project.delete project.buildDir
    }
}

/**
 * Adds the version information into the `package.json` file.
 */
task versionSet {
    doLast {
        ant.replaceregexp(
                match: '"version": "(.*)"',
                replace: "\"version\": \"${version}\"",
                byline: true,
                encoding: 'UTF-8'
        ) {
            fileset(dir: project.projectDir, includes: 'package.json')
        }
    }
}
task versionUnset {
    doLast {
        ant.replaceregexp(
                match: '"version": "(.*)"',
                replace: "\"version\": \"2.0.0\"",
                byline: true,
                encoding: 'UTF-8'
        ) {
            fileset(dir: project.projectDir, includes: 'package.json')
        }
    }
}

task buildProd(dependsOn: ['setup', 'versionSet', 'gruntProd']) {
    finalizedBy versionUnset
}

task buildDev(dependsOn: ['setup', 'gruntDev']) {
}

if (project.hasProperty('dev')) {
    build.dependsOn buildDev
    build.ext.output = "${project.buildDir}/grunt/dev"
} else {
    build.dependsOn buildProd
    build.ext.output = "${project.buildDir}/grunt/prod"
}

task gruntProd(type: Exec) {
    inputs.dir "${projectDir}/src"
    inputs.dir "${projectDir}/vendor"
    inputs.file "${projectDir}/bower.json"
    outputs.dir "${project.buildDir}/grunt/prod"
    commandLine 'grunt', 'prod'
}

task gruntDev(type: Exec) {
    inputs.dir "${projectDir}/src"
    inputs.dir "${projectDir}/vendor"
    inputs.file "${projectDir}/bower.json"
    outputs.dir "${project.buildDir}/grunt/dev"
    commandLine 'grunt', 'dev'
}

clean.mustRunAfter setup
gruntDev.mustRunAfter setup
gruntProd.mustRunAfter setup
gruntProd.mustRunAfter versionSet
