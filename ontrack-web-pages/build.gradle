/**
 * Web site
 *
 * See http://stackoverflow.com/questions/17643381/how-to-upload-my-angularjs-static-site-to-github-pages
 * for the deployment
 */

task npmInstall(type: Exec) {
    commandLine 'npm', 'install'
}

task bowerInstall(type: Exec) {
    commandLine 'bower', 'install', '--force-latest'
}

task setup(dependsOn: ['npmInstall', 'bowerInstall'])

task gruntClean(type: Exec, dependsOn: ['setup']) {
    commandLine 'grunt', 'clean'
}

task versionClean(type: Exec) {
    commandLine 'git', 'checkout', '--', 'package.json'
}

task clean(dependsOn: ['gruntClean', 'versionClean']) {
    doLast {
        project.delete project.buildDir
    }
}

/**
 * Adds the version information into the `package.json` file.
 */
task versionSet << {
    ant.replaceregexp(
            match: '"version": "(.*)"',
            replace: "\"version\": \"${version}\"",
            byline: true,
            encoding: 'UTF-8'
    ) {
        fileset(dir: project.projectDir, includes: 'package.json')
    }
}

task versionFile << {
    project.file('src/assets/version.json').text = """{"version":"${version}"}"""
}

task release(dependsOn: ['setup', 'versionFile', 'versionSet', 'gruntProd']) {
    ext {
        output = "${project.buildDir}/grunt/prod"
    }
}

task build(dependsOn: ['setup', 'versionFile', 'gruntDev']) {
    ext {
        output = "${project.buildDir}/grunt/dev"
    }
}

task gruntProd(type: Exec) {
    commandLine 'grunt', 'prod'
}

task gruntDev(type: Exec) {
    commandLine 'grunt', 'dev'
}

clean.mustRunAfter setup
gruntDev.mustRunAfter setup
gruntDev.mustRunAfter versionFile
gruntProd.mustRunAfter setup
gruntProd.mustRunAfter versionSet
gruntProd.mustRunAfter versionFile
